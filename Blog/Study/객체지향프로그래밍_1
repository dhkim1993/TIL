# 객체지향언어
#### 실제 세계를 사물(객체)로 이루어져 있으며, 발생하는 모든 사건들은 사물간의 상호작용이다. 실제 사물의 속성과 기능을 분석한 다음, 데이터(변수)와 함수로 정의함으로써 실제 세계를 컴퓨터 속에 옮겨 놓은것과 같은 가상 세계를 구현한다.

## 객체지향언어 주요특징

**1. 코드의 재사용성이 높다.**  
* 새로운 코드를 작성할때 기존의 코드를 이용하여 쉽게 작성할 수 있다.

**2. 코드의 관리가 용이하다.**.   
- 코드간의 관계를 이용해서 적은 노력으로 쉽게 코드를 변경할 수 있다.

**3. 신뢰성이 높은 프로그래밍을 가능하게 한다.**     
- 제어자와 메서드를 이용해서 데이터를 보호하고 올바른 값을 유지하도록 하며, 코드의 중복을 제거하여 코드의 불일치로 인한 오작동을 방지할 수 있다.

# 클래스와 객체
* 클래스의 정의 : 객체를 정의해 놓은 것이다.		
* 클래스의 용도 : 객체를 생성하는데 사용된다.		
* 객체의 정의 : 실제로 존재하는것, 사물 또는 개념	
* 객체의 용도 : 객체가 가지고 있는 기능과 속성에 따라 다름  
* 유형의 객체 : 책상, 의자, 자동차, TV등	
* 무형의 객체 : 수학공식, 프로그램에러, 논리나 개념 등 

| 클래스 | 객체 | 
|:---:|:---:|
| 제품 설계도 | 제품 | 
| TV 설계도 | TV |  
| 붕어빵기계 | 붕어빵 |  


**기본형 매개변수** : 변수의 값을 읽기만 할 수 있다.(read only)            
**참조형 매개변수** : 변수의 값을 읽고 변경 할 수 있다.(read & write)

###맴버변수의 초기화 시기와 순서         
- 클래스변수의 초기화시점 :        
클래스가 처음 로딩될 떄 단 한번 초기화 된다.
- 인스턴스변수의 초기화시점 :   
 인스턴스가 생성될 때마다 각 인스턴스 별로 초기화가 이루어진다.
- 클래스 변수의 초기화순서 :   
기본값 -> 명시적 초기화 -> 클래스 초기화블럭
- 인스턴스 변수의 초기화 순서 :     
기본값 -> 명시적 초기화 -> 인스턴스 초기화블럭 -> 생성자


> 클래스변수는 항상 인스턴스 변수보다 먼저 생성되고 초기화된다.

